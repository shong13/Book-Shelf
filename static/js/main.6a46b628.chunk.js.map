{"version":3,"sources":["Books.js","SearchBooks.js","Shelf.js","Home.js","BooksAPI.js","App.js","index.js"],"names":["Books","_this","this","_this$props$bookInfo","props","bookInfo","title","authors","imageLinks","shelf","react_default","a","createElement","className","style","width","height","backgroundImage","concat","thumbnail","undefined","value","onChange","event","shelfUpdate","target","disabled","map","names","index","key","Component","SearchBooks","results","book","Link","to","onClick","deleteQuery","type","placeholder","query","updateQuery","details","id","src_Books","change","Shelf","shelfName","books","c","Home","allBooks","src_Shelf","filter","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","update","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","BooksApp","state","componentDidMount","BooksAPI","setState","changeShelf","b","searchBooks","trim","error","forEach","allBook","resBook","_this2","Route","exact","path","render","src_SearchBooks","src_Home","ReactDOM","HashRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6a46b628.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Books extends Component {\r\n\trender() {\r\n\t\tconst { title, authors, imageLinks, shelf } = this.props.bookInfo\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"book\">\r\n\t\t\t  <div className=\"book-top\">\r\n\t\t\t\t<div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${imageLinks ? imageLinks.thumbnail : undefined})` }}></div>\r\n\t\t\t\t<div className=\"book-shelf-changer\">\r\n\t\t\t\t  <select value={shelf ? shelf : \"none\"} onChange={(event) => { this.props.shelfUpdate(this.props.bookInfo, event.target.value) }}>\r\n\t\t\t\t\t<option value=\"move\" disabled>Move to...</option>\r\n\t\t\t\t\t<option value=\"currentlyReading\">Currently Reading</option>\r\n\t\t\t\t\t<option value=\"wantToRead\">Want to Read</option>\r\n\t\t\t\t\t<option value=\"read\">Finished Reading</option>\r\n\t\t\t\t\t<option value=\"none\">None</option>\r\n\t\t\t\t  </select>\r\n\t\t\t\t</div>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"book-title\">{title}</div>\r\n\t\t\t  {authors ? authors.map((names, index) =>\r\n\t\t\t  \t<div key={index} className=\"book-authors\">{names}</div>\r\n\t\t\t  ) : undefined}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Books","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Books from './Books'\r\n\r\nclass SearchBooks extends Component {\r\n\t\r\n\trender() {\r\n\t\tconst { results } = this.props.book\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"search-books\">\r\n\t\t\t\t<div className=\"search-books-bar\">\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tto=\"/\"\r\n\t\t\t\t\t><button onClick={this.props.deleteQuery} className=\"close-search\">Close</button></Link>\r\n\t\t\t\t\t<div className=\"search-books-input-wrapper\">\r\n\t\t\t\t\t\t{/*\r\n\t\t\t\t\t\tNOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n\t\t\t\t\t\tYou can find these search terms here:\r\n\t\t\t\t\t\thttps://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\n\t\t\t\t\t\tHowever, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n\t\t\t\t\t\tyou don't find a specific author or title. Every search is limited by search terms.\r\n\t\t\t\t\t\t*/}\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"Search by title or author\" value={this.props.query}\r\n\t\t\t\t\t\t\tonChange={(event) => this.props.updateQuery(event.target.value)}/>\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"search-books-results\">\r\n\t\t\t\t\t<ol className=\"books-grid\">\r\n\t\t\t\t\t\t{results.map((details)=> (\r\n\t\t\t\t\t\t\t<li key={details.id}>\r\n\t\t\t\t\t\t\t\t<Books shelfUpdate={this.props.change} bookInfo={details}/>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t))} \r\n\t\t\t\t\t</ol>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default SearchBooks","import React, { Component } from 'react'\r\nimport Books from './Books'\r\n\r\nclass Shelf extends Component {\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"bookshelf\">\r\n\t\t\t\t<h2 className=\"bookshelf-title\">{this.props.shelfName}</h2>\r\n\t\t\t\t<div className=\"bookshelf-books\">\r\n\t\t\t\t\t<ol className=\"books-grid\">\r\n\t\t\t\t\t\t{this.props.books.map((details)=> (\r\n\t\t\t\t\t\t\t<li key={details.id}>\r\n\t\t\t\t\t\t\t\t<Books shelfUpdate={this.props.c} bookInfo={details}/>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Shelf","import React, { Component } from 'react'\r\nimport Shelf from './Shelf'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Home extends Component {\r\n\trender() {\r\n\t\tconst { allBooks } = this.props.book\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"list-books\">\r\n\t\t\t\t<div className=\"list-books-title\">\r\n\t\t\t\t\t<h1>MyReads</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"list-books-content\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Shelf c={this.props.change} shelfName=\"Currently Reading\" books={allBooks.filter(books => books.shelf === \"currentlyReading\")}/>\r\n\t\t\t\t\t\t<Shelf c={this.props.change} shelfName=\"Want To Read\" books={allBooks.filter(books => books.shelf === \"wantToRead\")}/>\r\n\t\t\t\t\t\t<Shelf c={this.props.change} shelfName=\"Finished Reading\" books={allBooks.filter(books => books.shelf === \"read\")}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"open-search\">\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tto=\"/search\"\r\n\t\t\t\t\t\tclassName=\"open-search\"\r\n\t\t\t\t\t><button>Add a book</button></Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Home","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react'\nimport SearchBooks from './SearchBooks'\nimport Home from './Home'\nimport { Route } from 'react-router-dom'\nimport './App.css'\nimport * as BooksAPI from './BooksAPI'\n\nclass BooksApp extends Component {\n  state = {\n    allBooks: [],\n    results: [],\n    query: ''\n  }\n\n  componentDidMount = () => {\n    BooksAPI.getAll().then((books) => {\n      this.setState({ \n      \tallBooks: books\n      })\n    })\n  }\n\n  changeShelf = (book, shelf) => {\n  \tBooksAPI.update(book, shelf).then(()=> {\n  \t\tbook.shelf = shelf\n  \t\tthis.setState(state => ({\n  \t\t\tallBooks: state.allBooks.filter(b => b.id !== book.id).concat([book])\n  \t\t}))\n  \t})\n  }\n\n  searchBooks = () => {\n    if (this.state.query.trim() === '' || this.state.query === undefined){\n      return this.setState({ results: [] })\n    }\n    BooksAPI.search(this.state.query.trim()).then(res => {\n      if(res.error || !res){\n        return this.setState({ results: [] })\n      } else {\n        this.state.allBooks.forEach((allBook)=>{\n          res.forEach(resBook=>{\n            if(allBook.id===resBook.id){\n              resBook.shelf=allBook.shelf\n            }\n          })\n        })\n        return this.setState({ results: res })\n      }\n    })\n  }\n\n  updateQuery = (query) => {\n    this.setState({query: query}, this.searchBooks) \n  }\n\n  deleteQuery = () => {\n    this.setState({query: ''}, this.searchBooks)\n  }\n\n  \n\n\n  render() {\n    return (\n      \n      <div className=\"app\">\n        <Route exact path=\"/search\" render={()=>(\n        \t<SearchBooks deleteQuery={this.deleteQuery} updateQuery={this.updateQuery} change={this.changeShelf} book={this.state} searchBooks={this.searchBooks} />\n        )}/>\n        <Route exact path=\"/\" render={()=>(\n        \t<Home book={this.state} change={this.changeShelf}/>\n        )}/>\n      </div>\n\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { BrowserRouter } from 'react-router-dom'\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(\n\t<HashRouter><App /></HashRouter>, \n\tdocument.getElementById('root'))\n"],"sourceRoot":""}